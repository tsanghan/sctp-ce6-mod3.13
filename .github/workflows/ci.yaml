name: Lambda with Python Function and Tofu Deployment
on:
  push:
    branches: [ main, "*"]
  workflow_dispatch:
  #checkov:skip=CKV_GHA_7: "The build output cannot be affected by user parameters other than the build entry point and the top-level source location. GitHub Actions workflow_dispatch inputs MUST be empty. "

env:
  AWS_REGION: ap-southeast-1

permissions:
  id-token: write
  contents: read

jobs:
  pre-deploy:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event"
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

  install-dependencies:
    runs-on: ubuntu-latest
    needs: pre-deploy
    steps:
      - uses: actions/checkout@v4
      - name: Install Python 3
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Install dependencies
        run: |
          # python3 -m venv .env
          # source .env/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

  # code-unit-testing:
  #   runs-on: ubuntu-latest
  #   needs: install-dependencies
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Install Python 3
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: 3.12
  #     - name: Install dependencies
  #       run: |
  #         # python3 -m venv .env
  #         # source .env/bin/activate
  #         pip install --upgrade pip
  #         pip install -r requirements.txt
  #     - name: Run tests with pytest
  #       run: |
  #           export PYTHONPATH=$(pwd)
  #           pytest __tests__/*

  deploy:
    runs-on: ubuntu-latest
    needs: install-dependencies

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    # - name: Checkov GitHub Action
    #   uses: bridgecrewio/checkov-action@v12
    #   with:
    #     ## This will add both a CLI output to the console and create a results.sarif file
    #     output_format: cli
    #     output_file_path: console

    # - name: Configure AWS credentials
    #   uses: aws-actions/configure-aws-credentials@v4.0.2
    #   with:
    #     aws-region: ${{ env.AWS_REGION }}
    #     role-to-assume: "arn:aws:iam::255945442255:role/GitHubAction-AssumeRoleWithAction"
    #     role-session-name: GitHub_to_AWS_via_FederatedOIDC

    # - name: Sts GetCallerIdentity
    #   run: |
    #       aws sts get-caller-identity

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4.0.2
      with:
        aws-region: ${{ env.AWS_REGION }}
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Setup TFLint
      uses: terraform-linters/setup-tflint@v4
      with:
        tflint_version: v0.52.0

    - name: Show version
      run: tflint --version

    - name: Init TFLint
      run: tflint --init

    - name: Run TFLint
      run: tflint -f compact

    - name: Setup Tofu
      uses: opentofu/setup-opentofu@v1
      with:
        tofu_version: "1.7.3"
        tofu_wrapper: false

    - name: Tofu Init
      run: tofu init

    - name: Tofu Fmt
      run: tofu fmt -recursive -check

    - name: Tofu Validate
      run: tofu validate

    - name: Todu Plan
      run: tofu plan

    - name: Tofu Apply
      run: tofu apply -auto-approve

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: code-unit-testing
  #   steps:
  #     - name: Check out repository code
  #       uses: actions/checkout@v4
  #     - name: Run installation of dependencies commands
  #       run: npm install
  #     - name: Deploy serverless
  #       uses: serverless/github-action@v4
  #       with:
  #         args: deploy
  #       env:
  #         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         AWS_REGION: ${{ env.AWS_REGION }}
  #         SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}